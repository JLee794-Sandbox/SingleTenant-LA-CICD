{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "If_not_past_endTime_or_exceeds_count": {
                "actions": {
                    "Catch_TimerJob_error": {
                        "actions": {
                            "Terminate_failed_to_create_job": {
                                "inputs": {
                                    "runError": {
                                        "message": "Failed to create timer job"
                                    },
                                    "runStatus": "Failed"
                                },
                                "runAfter": {
                                    "Timer_job_failed_response": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Terminate"
                            },
                            "Timer_job_failed_response": {
                                "inputs": {
                                    "body": "Failed to create timer job",
                                    "statusCode": 400
                                },
                                "kind": "Http",
                                "type": "Response"
                            }
                        },
                        "runAfter": {
                            "TimerJob": [
                                "Failed",
                                "TimedOut"
                            ]
                        },
                        "type": "Scope"
                    },
                    "Created_Response": {
                        "inputs": {
                            "body": "Next execution time will be at @{variables('nextTime')}",
                            "statusCode": 201
                        },
                        "kind": "Http",
                        "runAfter": {
                            "TimerJob": [
                                "Succeeded"
                            ]
                        },
                        "type": "Response"
                    },
                    "TimerJob": {
                        "inputs": {
                            "body": {
                                "jobRecurrence": {
                                    "count": "@triggerBody()?['jobRecurrence']?['count']",
                                    "endTime": "@triggerBody()?['jobRecurrence']?['endTime']",
                                    "frequency": "@triggerBody()?['jobRecurrence']?['frequency']",
                                    "interval": "@triggerBody()?['jobRecurrence']?['interval']"
                                },
                                "jobStatus": {
                                    "executionCount": "@triggerBody()?['jobStatus']?['executionCount']",
                                    "faultedCount": "@triggerBody()?['jobStatus']?['faultedCount']",
                                    "lastExecutionTime": "@triggerBody()?['jobStatus']?['lastExecutionTime']",
                                    "nextExecutionTime": "@variables('nextTime')"
                                },
                                "startTime": "@triggerBody()?['startTime']",
                                "timerjobid": "@triggerBody()['timerjobid']"
                            },
                            "host": {
                                "triggerName": "manual",
                                "workflow": {
                                    "id": "TimerJob"
                                }
                            }
                        },
                        "type": "Workflow"
                    }
                },
                "else": {
                    "actions": {
                        "Cancelled": {
                            "inputs": {
                                "runStatus": "Cancelled"
                            },
                            "runAfter": {
                                "Exceeded_Criteria_Response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Terminate"
                        },
                        "Exceeded_Criteria_Response": {
                            "inputs": {
                                "body": "Job completion criteria met.\nDetails: \nEither\nendTime(@{triggerBody()?['jobRecurrence']?['endTime']}) < Next execution time(@{variables('nextTime')})\nOR\ncount(@{triggerBody()?['jobRecurrence']?['count']}) > execution count (@{triggerBody()?['jobStatus']?['executionCount']})",
                                "statusCode": 409
                            },
                            "kind": "Http",
                            "type": "Response"
                        }
                    }
                },
                "expression": {
                    "and": [
                        {
                            "or": [
                                {
                                    "equals": [
                                        "@coalesce(triggerBody()?['jobRecurrence']?['endTime'],-1)",
                                        -1
                                    ]
                                },
                                {
                                    "less": [
                                        "@variables('nextTime')",
                                        "@{triggerBody()?['jobRecurrence']?['endTime']}"
                                    ]
                                }
                            ]
                        },
                        {
                            "or": [
                                {
                                    "equals": [
                                        "@coalesce(triggerBody()?['jobRecurrence']?['count'],-1)",
                                        -1
                                    ]
                                },
                                {
                                    "greater": [
                                        "@coalesce(triggerBody()?['jobRecurrence']?['count'],1)",
                                        "@coalesce(triggerBody()?['jobStatus']?['executionCount'],0)"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_nextTime": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Initialize_nextTime": {
                "inputs": {
                    "variables": [
                        {
                            "name": "nextTime",
                            "type": "string",
                            "value": "@{addToTime(coalesce(triggerBody()?['jobStatus']?['lastExecutionTime'],variables('startTime')),triggerBody()['jobRecurrence']['interval'],triggerBody()['jobRecurrence']['frequency'])}"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_startTime": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_startTime": {
                "inputs": {
                    "variables": [
                        {
                            "name": "startTime",
                            "type": "string",
                            "value": "@{if(less(coalesce(triggerBody()?['startTime'],utcNow()),utcNow()),utcNow(),coalesce(triggerBody()?['startTime'],utcNow()))}"
                        }
                    ]
                },
                "type": "InitializeVariable"
            }
        },
        "contentVersion": "1.0.0.0",
        "triggers": {
            "manual": {
                "correlation": {
                    "clientTrackingId": "@triggerBody()['timerjobid']"
                },
                "inputs": {
                    "schema": {
                        "properties": {
                            "jobRecurrence": {
                                "properties": {
                                    "count": {
                                        "minimum": -1,
                                        "title": "count (jobRecurrence)",
                                        "type": "integer"
                                    },
                                    "endTime": {
                                        "title": "endTime (jobRecurrence)",
                                        "type": "string"
                                    },
                                    "frequency": {
                                        "enum": [
                                            "second",
                                            "minute",
                                            "hour",
                                            "day",
                                            "week",
                                            "month"
                                        ],
                                        "title": "frequency (jobRecurrence)",
                                        "type": "string"
                                    },
                                    "interval": {
                                        "title": "interval (jobRecurrence)",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "frequency",
                                    "interval"
                                ],
                                "type": "object"
                            },
                            "jobStatus": {
                                "properties": {
                                    "executionCount": {
                                        "title": "executionCount (jobStatus)",
                                        "type": "integer"
                                    },
                                    "faultedCount": {
                                        "title": "faultedCount (jobStatus)",
                                        "type": "integer"
                                    },
                                    "lastExecutionTime": {
                                        "title": "lastExecutionTime (jobStatus)",
                                        "type": "string"
                                    },
                                    "nextExecutionTime": {
                                        "title": "nextExecutionTime (jobStatus)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "startTime": {
                                "type": "string"
                            },
                            "timerjobid": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "jobRecurrence",
                            "timerjobid"
                        ],
                        "type": "object"
                    }
                },
                "kind": "Http",
                "type": "Request"
            }
        }
    },
    "kind": "Stateful"
}