# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Logic App Infrastructure as Code Pipeline. 

on:
  workflow_dispatch:
    inputs:
      deployWorkflows:
        type: boolean
        description: 'Deploy the logic app workflows in the /logic directory?'
        required: false
        default: true
      deployFunctions:
        type: boolean
        description: 'Deploy the function in the /function directory?'
        required: false
        default: true
  push:
    paths:
      - "iac/**"
      - ".github/workflows/coreinfra_deploy.yml"

env:
  modulePath: 'iac'
  terraform_version: 1.1.8
  location: 'eastus2'
  logic_app_name: 'std-la-cicd-demo2'
  resource_group_name: 'std-la-cicd-demo2'
  storage_account_name: 'stdlacicddemosa2'

jobs:
  deploy_core_infrastructure:
    name: CoreInfra
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    runs-on: ubuntu-latest
    steps:

      # Checkout
      - name: Checkout
        uses: actions/checkout@v1
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Terraform Validate Formatting
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        working-directory: ${{ env.modulePath }}
        run: terraform init


      - name: Terraform Validate
        working-directory: ${{ env.modulePath }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ${{ env.modulePath }}
        continue-on-error: true
        run: |
          terraform plan \
            -var "location=${{ env.location }}" \
            -var "logic_app_name=${{ env.logic_app_name }}" \
            -var "resource_group_name=${{ env.resource_group_name }}" \
            -var "storage_account_name=${{ env.storage_account_name }}"
      
      - name: Terraform Apply
        working-directory: ${{ env.modulePath }}
        run: |
          terraform apply -auto-approve \
            -var "location=${{ env.location }}" \
            -var "logic_app_name=${{ env.logic_app_name }}" \
            -var "resource_group_name=${{ env.resource_group_name }}" \
            -var "storage_account_name=${{ env.storage_account_name }}"

  deploy_logic_app_workflows:
    name: LogicAppWorkflows
    needs: deploy_core_infrastructure
    runs-on: windows-latest
    steps:
      - name: 'Setup agent'
        shell: pwsh
        run: |
          # Grouping task logs
          Write-Output "::group::Setup agent"

          Install-Module -Name Az.Functions -MinimumVersion "4.0.0" -Force

          Write-Output "::endgroup::"
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
      
      - uses: actions/download-artifact@master
        with:
          name: logic
          path: ./output/
          
      - name: Get publish Profile
        id: publishprofile
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $profile = Get-AzWebAppPublishingProfile `
                -ResourceGroupName ${{ env.resource_group_name }}" `
                -Name ${{ env.logic_app_name }}
            $profile = $profile.Replace("`r", "").Replace("`n", "")
            Write-Output "::set-output name=profile::$profile"
          azPSVersion: latest

      - name: Deploy to Azure Logic App
        uses: azure/functions-action@v1.3.1
        id: la
        with:
          app-name: ${{ env.resource_group_name }}"
          package: './output/logic.zip'
          publish-profile: ${{steps.publishprofile.outputs.profile}}

      - name: Swap parameter files 
        id: params
        uses: azure/powershell@v1
        with:
          inlineScript: |
            az functionapp deploy --resource-group ${{ env.resource_group_name }}" --name ${{ env.logic_app_name }} --src-path  logic/azure.parameters.json --type static --target-path parameters.json
          azPSVersion: latest

  # # job_deploy_logic_app_workflows:
  # #   name: Init-Validate-Apply
  # #   runs-on: ubuntu-latest
  # #   environment: 
  # #     name: Dev
  # #   steps:
  # #     - name: 'Checkout'
  # #       uses: actions/checkout@v2
  # #       with:
  # #     - uses: .github/templates/workflow_deploy.yml
  # #       with:
  # #         logicAppName: ${{ env.logic_app_name }}
  # #         resourceGroupName: ${{ env.resource_group_name }}
